1.C Programming of Signature Case 
( Eg. User Input: Ayan kumar Das Roy 
          Output: A. K. D. Roy ) 

#include<stdio.h>
#include<string.h>
void main()
{
	char arr[50];
	int n,i,j;
	printf("\nEnter a Name=");
	gets(arr);
	n=strlen(arr);
	printf("\nPrinting signature case'-->\n");
	for(i=0;i<n;i++)
	{
		if(i==0)
			printf("%c. ",arr[i]);
		if(arr[i]==' ')
		{
			printf("%c. ",arr[i+1]);
			j=i+1;
		}
	}
	printf("\b\b");
	for(i=j+1;i<n;i++)
		printf("%c",arr[i]);
}


2.  Reverse a string by swapping.


include<stdio.h>
void strrev1(char a[])
{
    int i,t,j;
    char b;
    for(i=0;a[i]!='\0';i++);
    t=i-1;
    for(j=0;j<i/2;j++)
    {
        b=a[j];
        a[j]=a[t];
        a[t]=b;
        t--;
    }
    
}
void main()
{
    char a[30];
    printf("Enter your string: ");
    gets(a);
    strrev1(a);
    printf("%s",a);
}


3.. Write a C Program to Check whether the Given String is a Palindrome 

#include<stdio.h>
void main()
{
    char a[30];
    int i,j,t,f=0;
    printf("Enter the string: ");
    gets(a);
    for(i=0;a[i]!='\0';i++);
    t=i-1;
    for(j=0;j<i/2;j++)
    {
        if(a[j]!=a[t]){
            f=1;
            break;
        }
        t--;
    }
    if (f==0)
        printf("Palindrome word");
    else
        printf("Not a palindrome word");
}

4.  Write a C Program to Find the Frequency of Characters in a String

#include<stdio.h>
void main()
{
    char a[20];
    int n[26]={0},i;
    printf("Enter your name: ");
    gets(a);
    for(i=0;a[i]!='\0';i++){
        n[a[i]-97]++;
    }
    for(i=0;i<26;i++){
        if (n[i]!=0)
            printf("%c occurs %d times\n",i+97,n[i]);
    }

5.C program to replace a word.

#include<stdio.h>
void replaceSubstring(char [],char[],char[]);
void main()
{
char string[100],sub[100],new_str[100];
printf("\nEnter a string: ");
gets(string);
printf("\nEnter the substring: ");
gets(sub);
printf("\nEnter the new substring: ");
gets(new_str);
replaceSubstring(string,sub,new_str);
printf("\nThe string after replacing : %s\n",string);
}

void replaceSubstring(char string[],char sub[],char new_str[])
{
int stringLen,subLen,newLen;
int i=0,j,k;
int flag=0,start,end;
for(stringLen=0;string[stringLen]!='\0';stringLen++);
for(subLen=0;sub[subLen]!='\0';subLen++);
for(newLen=0;new_str[newLen]!='\0';newLen++);
for(i=0;i<stringLen;i++)
{
flag=0;
start=i;
for(j=0;string[i]==sub[j];j++,i++)
if(j==subLen-1)
flag=1;
end=i;
if(flag==0)
i-=j;
else
{
for(j=start;j<end;j++)
{
for(k=start;k<stringLen;k++)
string[k]=string[k+1];
stringLen--;
i--;
}

for(j=start;j<start+newLen;j++)
{
for(k=stringLen;k>=j;k--)
string[k+1]=string[k];
string[j]=new_str[j-start];
stringLen++;
i++;
}
}
}
}